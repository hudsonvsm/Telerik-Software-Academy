Дизайн Команда (Command).

Участници:
– Команда (Command) 
Това е базовият интерфейс на командата.
– Конкретна команда (Concrete Command)
Това са различните имплементации на Command. В разгледания в по-горе проблем, това са командите, които манипулират робота.
– Получател (Receiver)
Това е класът, който знае как да изпълни конкретните операции, стоящи зад дадена команда.
– Инициатор (Invoker)
Инициаторът предизвиква изпълнението на командата, когато това е необходимо.
– Клиент (Client)
Това е класът, отговорен за създаването на различните конкретни команди, като им подава получател и друга, необходима им информация. Този клас често е отговорен и за подаването на тези команди на класа инициатор (Invoker).

Свързани шаблони:
"Композиция" (Composite) 
"Мементо" (Memento) 
"Прототип" (Prototype) 
"Модел-Представяне-Контролер" (MVC)

------------------------------------------------------------------------------------------------

Дизайн Композиция (Composite).

Участници:
– Композиция (Composite)
Това е базовият интерфейс на композицията.
– Компонент (Component)
Основен елемент.
– Листо (Leaf)
Част прилепена към основния елемент.
– Клиент (Client)
Това е класът, отговорен за създаването на различните конкретни команди, като им подава получател и друга, необходима им информация.

Свързани шаблони:
„Верига от отговорности“ (Chain of responsibility) 
„Декоратор“ (Decorator)
„Миниобект“ (Flyweight)
„Итератор“ (Iterator)
„Посетител“ (Visitor) 

------------------------------------------------------------------------------------------------

Дизайн Прототип (Prototype).

Участници
– Прототип (Prototype)
Това е базовият интерфейс на прототипа(абстрактния клас).
– Конкретен прототип (Concrete Prototype)
Конкретния прототип е класа Color.
– Клиент (Client)
Това е класът, към който се добавя прототипа.

Свързани шаблони:
„Абстрактна фабрика“ (Abstract Factory) 
„Композиция“ (Composite)
„Декоратор“ (Decorator)